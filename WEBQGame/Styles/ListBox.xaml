<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" >

    <Style x:Key="IconButtonStyle"
               TargetType="{x:Type Button}">
        <!-- set some default values -->
        <Setter Property="Background"
                    Value="Transparent" />
        <Setter Property="BorderBrush"
                    Value="Transparent" />
        <!-- set the visual tree of the control -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!-- here come the actual sub-controls -->
                    <Border x:Name="border"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                SnapsToDevicePixels="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Padding="0"
                                CornerRadius="3,3,3,3">
                        <Border x:Name="innerBorder"
                                    SnapsToDevicePixels="True"
                                    BorderThickness="1"
                                    Padding="2"
                                    CornerRadius="3,3,3,3">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  Margin="{TemplateBinding Padding}">
                                <ContentPresenter.Effect>
                                    <!-- give the content a bit of shadow -->
                                    <DropShadowEffect x:Name="shadow"
                                                          ShadowDepth="2"
                                                          Opacity="0.7"
                                                          BlurRadius="3" />
                                </ContentPresenter.Effect>
                                <ContentPresenter.RenderTransform>
                                    <!-- push the content a bit to the left and the top -->
                                    <TranslateTransform x:Name="translation"
                                                            X="-1"
                                                            Y="-1" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- 
                                the triggers define the reactions to various state
                                changes
                            -->
                        <Trigger Property="IsKeyboardFocused"
                                     Value="true">
                            <Setter TargetName="innerBorder"
                                        Property="BorderBrush"
                                        Value="#ff06cdff" />
                            <Setter Property="Background"
                                        Value="LightBlue" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                     Value="true">
                            <Setter Property="Background"
                                        Value="LightBlue" />
                        </Trigger>
                        <!-- when the control is disabled, just let the background shine through -->
                        <Trigger Property="IsEnabled"
                                     Value="false">
                            <Setter Property="Opacity"
                                        Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                     Value="True">
                            <!-- This Trigger manages the Animation of the button's content and its shadow -->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="shadow"
                                                             Storyboard.TargetProperty="(DropShadowEffect.ShadowDepth)" />
                                        <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.X)" />
                                        <DoubleAnimation Duration="0:0:0"
                                                             To="0"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.Y)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0"
                                                             To="1"
                                                             Storyboard.TargetName="shadow"
                                                             Storyboard.TargetProperty="(DropShadowEffect.ShadowDepth)" />
                                        <DoubleAnimation Duration="0:0:0"
                                                             To="-1"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.X)" />
                                        <DoubleAnimation Duration="0:0:0"
                                                             To="-1"
                                                             Storyboard.TargetName="translation"
                                                             Storyboard.TargetProperty="(TranslateTransform.Y)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- This is what Expression Blend creates as default Template -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true"
                                   Margin="2"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground"
                             EndPoint="0,1"
                             StartPoint="0,0">
        <GradientStop Color="#F3F3F3"
                          Offset="0" />
        <GradientStop Color="#EBEBEB"
                          Offset="0.5" />
        <GradientStop Color="#DDDDDD"
                          Offset="0.5" />
        <GradientStop Color="#CDCDCD"
                          Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder"
                         Color="#FF707070" />
    <Style x:Key="DefaultButtonStyle"
               TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
                    Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush"
                    Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness"
                    Value="1" />
        <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
        <Setter Property="VerticalContentAlignment"
                    Value="Center" />
        <Setter Property="Padding"
                    Value="1" />
        <Setter Property="Margin"
                    Value="0 3 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Microsoft_Windows_Themes:ButtonChrome SnapsToDevicePixels="true"
                                                               x:Name="Chrome"
                                                               Background="{TemplateBinding Background}"
                                                               BorderBrush="{TemplateBinding BorderBrush}"
                                                               RenderDefaulted="{TemplateBinding IsDefaulted}"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsPressed}">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True" />
                    </Microsoft_Windows_Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused"
                                     Value="true">
                            <Setter Property="RenderDefaulted"
                                        TargetName="Chrome"
                                        Value="true" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                     Value="true">
                            <Setter Property="RenderPressed"
                                        TargetName="Chrome"
                                        Value="true" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                     Value="false">
                            <Setter Property="Foreground"
                                        Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeftGridStyle" TargetType="{x:Type StackPanel}">
        <Style.Resources>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="BorderBrush" Value="Blue" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Padding" Value="5 0 0 0" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="TextAlignment" Value="left" />
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Padding" Value="5 0 0 0" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="TextAlignment" Value="left" />
            </Style>
            <Style TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground" Value="blue" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Height" Value="17" />
                <Setter Property="Width" Value="100" />
                <Setter Property="Margin" Value="5,0,0,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>
            <Style TargetType="{x:Type DockPanel}">
                <Setter Property="Margin" Value="0 5 0 0" />
                <Style.Resources>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="BorderBrush" Value="Blue" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="FontSize" Value="11" />
                        <Setter Property="Padding" Value="5 0 0 0" />
                        <Setter Property="TextWrapping" Value="Wrap" />
                        <Setter Property="TextAlignment" Value="left" />
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
    </Style>
    <DataTemplate x:Key="templateListBoxItem">
        <Grid Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Border Grid.Column="0"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Margin="0,0,0,0">
            </Border>


            <TextBlock Text="{Binding Path=Name}"
                       FontWeight="Bold"
                       Grid.Column="1" Padding="0" TextAlignment="Left" Foreground="#FF333333" Margin="2 -2 0 0"
                       Grid.Row="0" FontSize="14"></TextBlock>
            <TextBlock Text="{Binding Path=Description}" Foreground="Gray"
                       Grid.Column="1" Padding="0" TextAlignment="Left" Margin="2 -1 0 0"
                       Grid.Row="1"></TextBlock>
        </Grid>
    </DataTemplate>
    <Style x:Key="windowBody" TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="Tahoma" />
    </Style>

    <Style x:Key="styleListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ItemTemplate" Value="{StaticResource ResourceKey=templateListBoxItem}"></Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
    </Style>
    <Style x:Key="styleListItem" TargetType="{x:Type ListBoxItem}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightBlue"/>
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="0 5 0 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ActiveBorderColor}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>